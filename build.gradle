plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

loom {
	accessWidenerPath = file("src/main/resources/carpet-lab-addition.accesswidener")
}

version = project.minecraft_version+'-'+project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}+v${project.carpet_core_build}"
}

processResources {
	var replaceProperties = [
			minecraft_version	: project.minecraft_version,
			loader_version		: project.loader_version,
			mod_id				: project.archives_base_name,
			mod_version			: project.mod_version,
			mod_name			: project.mod_name,
			mod_desc			: project.mod_desc,
			mod_authors			: project.mod_authors,
			mod_license			: project.mod_license,
			mod_site			: project.mod_site,
			mod_source			: project.mod_source,
			mod_issues			: project.mod_issues,
			carpet_version		: project.carpet_core_version,
			java_version		: project.java_version
	]
	inputs.properties replaceProperties

	filesMatching(["fabric.mod.json"]) {
		expand replaceProperties
	}
}

processResources {
	var replaceProperties = [
			java_version		: project.java_version
	]
	inputs.properties replaceProperties

	filesMatching([project.archives_base_name + ".mixins.json"]) {
		expand replaceProperties
	}
}

def targetJavaVersion = project.java_version as Integer
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release.set(targetJavaVersion)
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = "VERSION_${project.java_version}" as JavaVersion
	targetCompatibility = "VERSION_${project.java_version}" as JavaVersion
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}